defmodule TwitchApi.Tags.ReplaceStreamTags do
  @moduledoc """
  â›” This module is autogenerated please do not modify manually.

  ## Example request from twitch api docs:
  ### descriptions:
  This example applies two stream tags to channel 257788195.
  The response body is empty.

  ### requests:
  curl -X PUT 'https://api.twitch.tv/helix/streams/tags?broadcaster_id=257788195'  
   -H'Authorization: Bearer 2gbdx6oar67tqtcmt49t3wpcgycthx'  
   -H'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'  
   -H'Content-Type: application/json'  
   -d'{"tag_ids":["621fb5bf-5498-4d8f-b4ac-db4d40d401bf","52d7e4cc-633d-46f5-818c-bb59102d9549"]}'


  ## Example response from twitch api docs:
  ### descriptions:

  ### responses:
  # Twitch CLI examples that:# Adds two stream tags to the channel.
  twitch api put /streams/tags -qbroadcaster_id=1234567 -b'{"tag_ids":["621fb5bf-5498-4d8f-b4ac-db4d40d401bf", "52d7e4cc-633d-46f5-818c-bb59102d9549"]}'# Removes all stream tags from the channel.
  twitch api put /streams/tags -qbroadcaster_id=1234567 -b'{"tag_ids":[]}'


  """

  alias TwitchApi.MyFinch
  alias TwitchApi.ApiJson.Template.Method.Headers

  @doc """
  ### Description:
  Applies one or more tags to the specified channel, overwriting any existing tags.

  ### Required authentication:
  Requires a user OAuth access token with a scope of 
  channel:manage:broadcast
  .
  """

  # The user ID of the channel to apply the tags to.
  @type broadcaster_id :: %{required(:broadcaster_id) => String.t()}

  @spec call(broadcaster_id) :: {:ok, Finch.Response.t()} | {:error, Exception.t()}
  def call(%{broadcaster_id: broadcaster_id}) do
    MyFinch.request(
      "PUT",
      "https://api.twitch.tv/helix/streams/tags?broadcaster_id=#{broadcaster_id}",
      Headers.config_headers(),
      nil
    )
  end
end
