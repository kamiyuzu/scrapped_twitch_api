defmodule TwitchApi.Moderation.GetBannedUsers do
  @moduledoc """
  â›” This module is autogenerated please do not modify manually.

  ## Example request from twitch api docs:
  ### descriptions:
  Gets the users who have been banned by Broadcaster 198704263.
  
  ### requests:
  curl -X GET 'https://api.twitch.tv/helix/moderation/banned?broadcaster_id=198704263'  
   -H'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y'  
   -H'Client-Id: uo6dggojyb8d6soh92zknwmi5ej1q2'
  

  ## Example response from twitch api docs:
  ### descriptions:
  Shows that users glowillig and quotrok have been banned.
  
  ### responses:
  {"data":[{"user_id":"423374343","user_login":"glowillig","user_name":"glowillig","expires_at":"2022-03-15T02:00:28Z","reason":"Does not like pineapple on pizza.","moderator_id":"141981764","moderator_login":"twitchdev","moderator_name":"TwitchDev"},{"user_id":"424596340","user_login":"quotrok","user_name":"quotrok","expires_at":"2022-08-07T02:07:55Z","reason":"Inappropriate words.","moderator_id":"141981764","moderator_login":"twitchdev","moderator_name":"TwitchDev"},...],"pagination":{"cursor":"eyJiIjpudWxsLCJhIjp7IkN1cnNvciI6IjEwMDQ3MzA2NDo4NjQwNjU3MToxSVZCVDFKMnY5M1BTOXh3d1E0dUdXMkJOMFcifX0"}}
  

  """

  alias TwitchApi.MyFinch


  @doc """
  ### Description:
  Returns all banned and timed-out users for a channel.

  ### Required authentication:
  OAuth token required
  Required scope: moderation:read
  """

  @typep broadcaster_id :: %{required(:broadcaster_id) => String.t()} # Provided broadcaster_id must match the user_id in the OAuth token.
  
  @spec call(broadcaster_id) :: {:ok, Finch.Response.t} | {:error, Exception.t}
  def call(%{broadcaster_id: broadcaster_id}) do
    MyFinch.request("GET","https://api.twitch.tv/helix/moderation/banned?broadcaster_id=#{broadcaster_id}",
    TwitchApi.ApiJson.Template.Method.Headers.config_headers(), nil)
  end

end
